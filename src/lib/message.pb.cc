// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "message.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class ChatMessageDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ChatMessage>
     _instance;
  const ::HeartBeatMessage* heart_beat_;
  const ::TextMessage* text_message_;
} _ChatMessage_default_instance_;
class TextMessageDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TextMessage>
     _instance;
} _TextMessage_default_instance_;
class HeartBeatMessageDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HeartBeatMessage>
     _instance;
} _HeartBeatMessage_default_instance_;

namespace protobuf_message_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[3];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatMessage, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatMessage, from_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatMessage, to_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatMessage, lc_id_),
  offsetof(ChatMessageDefaultTypeInternal, heart_beat_),
  offsetof(ChatMessageDefaultTypeInternal, text_message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatMessage, test_oneof_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TextMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TextMessage, message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartBeatMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(ChatMessage)},
  { 11, -1, sizeof(TextMessage)},
  { 17, -1, sizeof(HeartBeatMessage)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_ChatMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TextMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HeartBeatMessage_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "message.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _ChatMessage_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ChatMessage_default_instance_);_TextMessage_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TextMessage_default_instance_);_HeartBeatMessage_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HeartBeatMessage_default_instance_);_ChatMessage_default_instance_.heart_beat_ = const_cast< ::HeartBeatMessage*>(
      ::HeartBeatMessage::internal_default_instance());
  _ChatMessage_default_instance_.text_message_ = const_cast< ::TextMessage*>(
      ::TextMessage::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rmessage.proto\"\231\001\n\013ChatMessage\022\017\n\007from_"
      "id\030\001 \001(\005\022\r\n\005to_id\030\002 \001(\005\022\r\n\005lc_id\030\003 \001(\005\022\'"
      "\n\nheart_beat\030\004 \001(\0132\021.HeartBeatMessageH\000\022"
      "$\n\014text_message\030\005 \001(\0132\014.TextMessageH\000B\014\n"
      "\ntest_oneof\"\036\n\013TextMessage\022\017\n\007message\030\001 "
      "\001(\t\"\022\n\020HeartBeatMessageb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 231);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "message.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_message_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChatMessage::kFromIdFieldNumber;
const int ChatMessage::kToIdFieldNumber;
const int ChatMessage::kLcIdFieldNumber;
const int ChatMessage::kHeartBeatFieldNumber;
const int ChatMessage::kTextMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChatMessage::ChatMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_message_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ChatMessage)
}
ChatMessage::ChatMessage(const ChatMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&from_id_, &from.from_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&lc_id_) -
    reinterpret_cast<char*>(&from_id_)) + sizeof(lc_id_));
  clear_has_test_oneof();
  switch (from.test_oneof_case()) {
    case kHeartBeat: {
      mutable_heart_beat()->::HeartBeatMessage::MergeFrom(from.heart_beat());
      break;
    }
    case kTextMessage: {
      mutable_text_message()->::TextMessage::MergeFrom(from.text_message());
      break;
    }
    case TEST_ONEOF_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:ChatMessage)
}

void ChatMessage::SharedCtor() {
  ::memset(&from_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lc_id_) -
      reinterpret_cast<char*>(&from_id_)) + sizeof(lc_id_));
  clear_has_test_oneof();
  _cached_size_ = 0;
}

ChatMessage::~ChatMessage() {
  // @@protoc_insertion_point(destructor:ChatMessage)
  SharedDtor();
}

void ChatMessage::SharedDtor() {
  if (has_test_oneof()) {
    clear_test_oneof();
  }
}

void ChatMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChatMessage::descriptor() {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChatMessage& ChatMessage::default_instance() {
  protobuf_message_2eproto::InitDefaults();
  return *internal_default_instance();
}

ChatMessage* ChatMessage::New(::google::protobuf::Arena* arena) const {
  ChatMessage* n = new ChatMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChatMessage::clear_test_oneof() {
// @@protoc_insertion_point(one_of_clear_start:ChatMessage)
  switch (test_oneof_case()) {
    case kHeartBeat: {
      delete test_oneof_.heart_beat_;
      break;
    }
    case kTextMessage: {
      delete test_oneof_.text_message_;
      break;
    }
    case TEST_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = TEST_ONEOF_NOT_SET;
}


void ChatMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:ChatMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&from_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lc_id_) -
      reinterpret_cast<char*>(&from_id_)) + sizeof(lc_id_));
  clear_test_oneof();
  _internal_metadata_.Clear();
}

bool ChatMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ChatMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 from_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &from_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 to_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &to_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 lc_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lc_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .HeartBeatMessage heart_beat = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_heart_beat()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .TextMessage text_message = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_text_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ChatMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ChatMessage)
  return false;
#undef DO_
}

void ChatMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ChatMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 from_id = 1;
  if (this->from_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->from_id(), output);
  }

  // int32 to_id = 2;
  if (this->to_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->to_id(), output);
  }

  // int32 lc_id = 3;
  if (this->lc_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->lc_id(), output);
  }

  // .HeartBeatMessage heart_beat = 4;
  if (has_heart_beat()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *test_oneof_.heart_beat_, output);
  }

  // .TextMessage text_message = 5;
  if (has_text_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *test_oneof_.text_message_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ChatMessage)
}

::google::protobuf::uint8* ChatMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ChatMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 from_id = 1;
  if (this->from_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->from_id(), target);
  }

  // int32 to_id = 2;
  if (this->to_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->to_id(), target);
  }

  // int32 lc_id = 3;
  if (this->lc_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->lc_id(), target);
  }

  // .HeartBeatMessage heart_beat = 4;
  if (has_heart_beat()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *test_oneof_.heart_beat_, deterministic, target);
  }

  // .TextMessage text_message = 5;
  if (has_text_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *test_oneof_.text_message_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ChatMessage)
  return target;
}

size_t ChatMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ChatMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 from_id = 1;
  if (this->from_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->from_id());
  }

  // int32 to_id = 2;
  if (this->to_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->to_id());
  }

  // int32 lc_id = 3;
  if (this->lc_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lc_id());
  }

  switch (test_oneof_case()) {
    // .HeartBeatMessage heart_beat = 4;
    case kHeartBeat: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *test_oneof_.heart_beat_);
      break;
    }
    // .TextMessage text_message = 5;
    case kTextMessage: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *test_oneof_.text_message_);
      break;
    }
    case TEST_ONEOF_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChatMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ChatMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ChatMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChatMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ChatMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ChatMessage)
    MergeFrom(*source);
  }
}

void ChatMessage::MergeFrom(const ChatMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ChatMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.from_id() != 0) {
    set_from_id(from.from_id());
  }
  if (from.to_id() != 0) {
    set_to_id(from.to_id());
  }
  if (from.lc_id() != 0) {
    set_lc_id(from.lc_id());
  }
  switch (from.test_oneof_case()) {
    case kHeartBeat: {
      mutable_heart_beat()->::HeartBeatMessage::MergeFrom(from.heart_beat());
      break;
    }
    case kTextMessage: {
      mutable_text_message()->::TextMessage::MergeFrom(from.text_message());
      break;
    }
    case TEST_ONEOF_NOT_SET: {
      break;
    }
  }
}

void ChatMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ChatMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChatMessage::CopyFrom(const ChatMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ChatMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChatMessage::IsInitialized() const {
  return true;
}

void ChatMessage::Swap(ChatMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChatMessage::InternalSwap(ChatMessage* other) {
  using std::swap;
  swap(from_id_, other->from_id_);
  swap(to_id_, other->to_id_);
  swap(lc_id_, other->lc_id_);
  swap(test_oneof_, other->test_oneof_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChatMessage::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChatMessage

// int32 from_id = 1;
void ChatMessage::clear_from_id() {
  from_id_ = 0;
}
::google::protobuf::int32 ChatMessage::from_id() const {
  // @@protoc_insertion_point(field_get:ChatMessage.from_id)
  return from_id_;
}
void ChatMessage::set_from_id(::google::protobuf::int32 value) {
  
  from_id_ = value;
  // @@protoc_insertion_point(field_set:ChatMessage.from_id)
}

// int32 to_id = 2;
void ChatMessage::clear_to_id() {
  to_id_ = 0;
}
::google::protobuf::int32 ChatMessage::to_id() const {
  // @@protoc_insertion_point(field_get:ChatMessage.to_id)
  return to_id_;
}
void ChatMessage::set_to_id(::google::protobuf::int32 value) {
  
  to_id_ = value;
  // @@protoc_insertion_point(field_set:ChatMessage.to_id)
}

// int32 lc_id = 3;
void ChatMessage::clear_lc_id() {
  lc_id_ = 0;
}
::google::protobuf::int32 ChatMessage::lc_id() const {
  // @@protoc_insertion_point(field_get:ChatMessage.lc_id)
  return lc_id_;
}
void ChatMessage::set_lc_id(::google::protobuf::int32 value) {
  
  lc_id_ = value;
  // @@protoc_insertion_point(field_set:ChatMessage.lc_id)
}

// .HeartBeatMessage heart_beat = 4;
bool ChatMessage::has_heart_beat() const {
  return test_oneof_case() == kHeartBeat;
}
void ChatMessage::set_has_heart_beat() {
  _oneof_case_[0] = kHeartBeat;
}
void ChatMessage::clear_heart_beat() {
  if (has_heart_beat()) {
    delete test_oneof_.heart_beat_;
    clear_has_test_oneof();
  }
}
 const ::HeartBeatMessage& ChatMessage::heart_beat() const {
  // @@protoc_insertion_point(field_get:ChatMessage.heart_beat)
  return has_heart_beat()
      ? *test_oneof_.heart_beat_
      : ::HeartBeatMessage::default_instance();
}
::HeartBeatMessage* ChatMessage::mutable_heart_beat() {
  if (!has_heart_beat()) {
    clear_test_oneof();
    set_has_heart_beat();
    test_oneof_.heart_beat_ = new ::HeartBeatMessage;
  }
  // @@protoc_insertion_point(field_mutable:ChatMessage.heart_beat)
  return test_oneof_.heart_beat_;
}
::HeartBeatMessage* ChatMessage::release_heart_beat() {
  // @@protoc_insertion_point(field_release:ChatMessage.heart_beat)
  if (has_heart_beat()) {
    clear_has_test_oneof();
    ::HeartBeatMessage* temp = test_oneof_.heart_beat_;
    test_oneof_.heart_beat_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void ChatMessage::set_allocated_heart_beat(::HeartBeatMessage* heart_beat) {
  clear_test_oneof();
  if (heart_beat) {
    set_has_heart_beat();
    test_oneof_.heart_beat_ = heart_beat;
  }
  // @@protoc_insertion_point(field_set_allocated:ChatMessage.heart_beat)
}

// .TextMessage text_message = 5;
bool ChatMessage::has_text_message() const {
  return test_oneof_case() == kTextMessage;
}
void ChatMessage::set_has_text_message() {
  _oneof_case_[0] = kTextMessage;
}
void ChatMessage::clear_text_message() {
  if (has_text_message()) {
    delete test_oneof_.text_message_;
    clear_has_test_oneof();
  }
}
 const ::TextMessage& ChatMessage::text_message() const {
  // @@protoc_insertion_point(field_get:ChatMessage.text_message)
  return has_text_message()
      ? *test_oneof_.text_message_
      : ::TextMessage::default_instance();
}
::TextMessage* ChatMessage::mutable_text_message() {
  if (!has_text_message()) {
    clear_test_oneof();
    set_has_text_message();
    test_oneof_.text_message_ = new ::TextMessage;
  }
  // @@protoc_insertion_point(field_mutable:ChatMessage.text_message)
  return test_oneof_.text_message_;
}
::TextMessage* ChatMessage::release_text_message() {
  // @@protoc_insertion_point(field_release:ChatMessage.text_message)
  if (has_text_message()) {
    clear_has_test_oneof();
    ::TextMessage* temp = test_oneof_.text_message_;
    test_oneof_.text_message_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void ChatMessage::set_allocated_text_message(::TextMessage* text_message) {
  clear_test_oneof();
  if (text_message) {
    set_has_text_message();
    test_oneof_.text_message_ = text_message;
  }
  // @@protoc_insertion_point(field_set_allocated:ChatMessage.text_message)
}

bool ChatMessage::has_test_oneof() const {
  return test_oneof_case() != TEST_ONEOF_NOT_SET;
}
void ChatMessage::clear_has_test_oneof() {
  _oneof_case_[0] = TEST_ONEOF_NOT_SET;
}
ChatMessage::TestOneofCase ChatMessage::test_oneof_case() const {
  return ChatMessage::TestOneofCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TextMessage::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TextMessage::TextMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_message_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:TextMessage)
}
TextMessage::TextMessage(const TextMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  // @@protoc_insertion_point(copy_constructor:TextMessage)
}

void TextMessage::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

TextMessage::~TextMessage() {
  // @@protoc_insertion_point(destructor:TextMessage)
  SharedDtor();
}

void TextMessage::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TextMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TextMessage::descriptor() {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TextMessage& TextMessage::default_instance() {
  protobuf_message_2eproto::InitDefaults();
  return *internal_default_instance();
}

TextMessage* TextMessage::New(::google::protobuf::Arena* arena) const {
  TextMessage* n = new TextMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TextMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:TextMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool TextMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TextMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TextMessage.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TextMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TextMessage)
  return false;
#undef DO_
}

void TextMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TextMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TextMessage.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TextMessage)
}

::google::protobuf::uint8* TextMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TextMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TextMessage.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TextMessage)
  return target;
}

size_t TextMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TextMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string message = 1;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TextMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TextMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const TextMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TextMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TextMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TextMessage)
    MergeFrom(*source);
  }
}

void TextMessage::MergeFrom(const TextMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TextMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
}

void TextMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TextMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TextMessage::CopyFrom(const TextMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TextMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TextMessage::IsInitialized() const {
  return true;
}

void TextMessage::Swap(TextMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TextMessage::InternalSwap(TextMessage* other) {
  using std::swap;
  message_.Swap(&other->message_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TextMessage::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TextMessage

// string message = 1;
void TextMessage::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TextMessage::message() const {
  // @@protoc_insertion_point(field_get:TextMessage.message)
  return message_.GetNoArena();
}
void TextMessage::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TextMessage.message)
}
#if LANG_CXX11
void TextMessage::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TextMessage.message)
}
#endif
void TextMessage::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TextMessage.message)
}
void TextMessage::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TextMessage.message)
}
::std::string* TextMessage::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:TextMessage.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TextMessage::release_message() {
  // @@protoc_insertion_point(field_release:TextMessage.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TextMessage::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:TextMessage.message)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HeartBeatMessage::HeartBeatMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_message_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:HeartBeatMessage)
}
HeartBeatMessage::HeartBeatMessage(const HeartBeatMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:HeartBeatMessage)
}

void HeartBeatMessage::SharedCtor() {
  _cached_size_ = 0;
}

HeartBeatMessage::~HeartBeatMessage() {
  // @@protoc_insertion_point(destructor:HeartBeatMessage)
  SharedDtor();
}

void HeartBeatMessage::SharedDtor() {
}

void HeartBeatMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HeartBeatMessage::descriptor() {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HeartBeatMessage& HeartBeatMessage::default_instance() {
  protobuf_message_2eproto::InitDefaults();
  return *internal_default_instance();
}

HeartBeatMessage* HeartBeatMessage::New(::google::protobuf::Arena* arena) const {
  HeartBeatMessage* n = new HeartBeatMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HeartBeatMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:HeartBeatMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool HeartBeatMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HeartBeatMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:HeartBeatMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HeartBeatMessage)
  return false;
#undef DO_
}

void HeartBeatMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HeartBeatMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HeartBeatMessage)
}

::google::protobuf::uint8* HeartBeatMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HeartBeatMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HeartBeatMessage)
  return target;
}

size_t HeartBeatMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HeartBeatMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HeartBeatMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HeartBeatMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const HeartBeatMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HeartBeatMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HeartBeatMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HeartBeatMessage)
    MergeFrom(*source);
  }
}

void HeartBeatMessage::MergeFrom(const HeartBeatMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HeartBeatMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void HeartBeatMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HeartBeatMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeartBeatMessage::CopyFrom(const HeartBeatMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HeartBeatMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeartBeatMessage::IsInitialized() const {
  return true;
}

void HeartBeatMessage::Swap(HeartBeatMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HeartBeatMessage::InternalSwap(HeartBeatMessage* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HeartBeatMessage::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HeartBeatMessage

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
